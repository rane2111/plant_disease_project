import streamlit as st
import numpy as np
import tensorflow as tf
from PIL import Image
import base64
import io

# -------------------- PAGE CONFIG --------------------
st.set_page_config(page_title="Plant Disease Detection", layout="centered")

# -------------------- BACKGROUND IMAGE SETUP --------------------
def get_base64_encoded_image(image_path):
    with open(image_path, "rb") as img_file:
        return base64.b64encode(img_file.read()).decode()

bg_image = get_base64_encoded_image(
    r"C:\Users\Raghunandan\OneDrive\Desktop\project\plant_disease_project\mango.jpg"
)

remedy_bg = get_base64_encoded_image(
    r"C:\Users\Raghunandan\OneDrive\Desktop\project\plant_disease_project\image.png"
)

background_css = f"""
<style>
.stApp {{
    background-image: url("data:image/jpg;base64,{bg_image}");
    background-size: cover;
    background-attachment: fixed;
    background-repeat: no-repeat;
    background-position: center;
    font-family: 'Segoe UI', sans-serif;
    color: white;
}}

h1 {{
    background-color: rgba(0, 0, 0, 0.5);
    padding: 1rem;
    border-radius: 15px;
    text-align: center;
}}

.upload-box {{
    background-color: rgba(0, 0, 0, 0.1);
    border-radius: 12px;
    padding: 25px;
    width: 100%;
    max-width: 500px;
    margin: 0 auto;
    animation: fadeIn 1.5s ease-in;
}}

.result-box {{
    background-color: rgba(253, 187, 45, 0.95);
    padding: 1.2rem;
    border: 2px solid #00cc66;
    border-left: 5px solid #00cc66;
    border-radius: 10px;
    margin: 1rem auto;
    font-size: 25px;
    font-weight: bold;
    width: fit-content;
    animation: bounceIn 1s;
    color: black;
    box-shadow: 0 4px 12px rgba(0,0,0,0.25);
}}

.remedy-box {{
    background-image: url("data:image/jpg;base64,{remedy_bg}");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    padding: 2rem;
    border: 2px solid #00cc66;
    border-left: 6px solid #00cc66;
    border-radius: 12px;
    margin: 2rem auto;
    font-size: 26px;
    font-weight: bold;
    width: 85%;
    max-width: 750px;
    animation: bounceIn 1s;
    color: RED;
    text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.9);
    box-shadow: 0 6px 20px rgba(0,0,0,0.4);
}}

.download-container {{
    display: flex;
    justify-content: center;
    margin-top: -15px;
    margin-bottom: 20px;
}}

.download-btn {{
    background-color: #000000;  /* Changed to black */
    color: white;
    padding: 12px 24px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    margin: 4px 2px;
    cursor: pointer;
    border-radius: 8px;
    border: none;
    transition: all 0.3s;
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
}}

.download-btn:hover {{
    background-color: #333333;  /* Dark gray on hover */
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(0,0,0,0.3);
}}



.download-btn:active {{
    transform: translateY(0);
}}

a {{
    text-decoration: none !important;
}}

@keyframes fadeIn {{
    from {{ opacity: 0; }}
    to {{ opacity: 1; }}
}}

@keyframes bounceIn {{
    0% {{ transform: scale(0.8); opacity: 0; }}
    100% {{ transform: scale(1); opacity: 1; }}
}}
</style>
"""
st.markdown(background_css, unsafe_allow_html=True)

# -------------------- MODEL + LOGIC --------------------
class_names = [
    "Anthracnose", "Bacterial Canker", "Cutting Weevil", "Die Back",
    "Gall Midge", "Healthy", "Powdery Mildew", "Sooty Mould"
]

remedies = {
    "Anthracnose": {
        "en": [
            "1. ЁЯМ┐ Spray fungicides like Mancozeb or Chlorothalonil.",
            "2. ЁЯЪп Remove and destroy infected plant parts.",
            "3. ЁЯТз Avoid overhead irrigation to reduce humidity.",
            "4. ЁЯМмя╕П Ensure proper spacing between plants for airflow."
        ],
        "hi": [
            "1. ЁЯМ┐ рдореЗрдВрдХреЛрдЬреЗрдм рдпрд╛ рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓ рдЬреИрд╕реЗ рдХрд╡рдХрдирд╛рд╢рдХреЛрдВ рдХрд╛ рдЫрд┐рдбрд╝рдХрд╛рд╡ рдХрд░реЗрдВред",
            "2. ЁЯЪп рд╕рдВрдХреНрд░рдорд┐рдд рдкреМрдзреЛрдВ рдХреЗ рд╣рд┐рд╕реНрд╕реЛрдВ рдХреЛ рд╣рдЯрд╛рдХрд░ рдирд╖реНрдЯ рдХрд░ рджреЗрдВред",
            "3. ЁЯТз рдЖрд░реНрджреНрд░рддрд╛ рдХреЛ рдХрдо рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдКрдкрд░реА рд╕рд┐рдВрдЪрд╛рдИ рд╕реЗ рдмрдЪреЗрдВред",
            "4. ЁЯМмя╕П рд╣рд╡рд╛ рдХреЗ рдкреНрд░рд╡рд╛рд╣ рдХреЗ рд▓рд┐рдП рдкреМрдзреЛрдВ рдХреЗ рдмреАрдЪ рдЙрдЪрд┐рдд рджреВрд░реА рдмрдирд╛рдП рд░рдЦреЗрдВред"
        ],
        "mr": [
            "1. ЁЯМ┐ рдореЕрдиреНрдХреЛрдЭреЗрдм рдХрд┐рдВрд╡рд╛ рдХреНрд▓реЛрд░реЛрдерд╛рд▓реЛрдирд┐рд▓рд╕рд╛рд░рдЦреНрдпрд╛ рдмреБрд░рд╢реАрдирд╛рд╢рдХрд╛рдВрдЪрд╛ рдлрд╡рд╛рд░рдгреА рдХрд░рд╛.",
            "2. ЁЯЪп рд╕рдВрдХреНрд░рдорд┐рдд рднрд╛рдЧ рдХрд╛рдвреВрди рдЯрд╛рдХрд╛ рдЖрдгрд┐ рдЬрд╛рд│реВрди рдЯрд╛рдХрд╛.",
            "3. ЁЯТз рд╣рд╡реЗрдордзреАрд▓ рдЖрд░реНрджреНрд░рддрд╛ рдЯрд╛рд│рдгреНрдпрд╛рд╕рд╛рдареА рд╡рд░реВрди рдкрд╛рдгреА рдЯрд╛рдХреВ рдирдХрд╛.",
            "4. ЁЯМмя╕П рд╣рд╡реЗрдЪрд╛ рдпреЛрдЧреНрдп рдкреНрд░рд╡рд╛рд╣ рд░рд╛рдЦрдгреНрдпрд╛рд╕рд╛рдареА рдЕрдВрддрд░ рдареЗрд╡рд╛."
        ],
        "time": "ЁЯХ░я╕П Early morning or late evening during dry weather."
    },
    "Bacterial Canker": {
        "en": [
            "1. ЁЯз┤ Copper-based fungicides (e.g., Copper Oxychloride, Bordeaux Mixture).",
            "2. ЁЯТЙ Streptomycin spray for bacterial suppression.",
            "3. тЬВя╕П Prune infected areas and disinfect tools."
        ],
        "hi": [
            "1. ЁЯз┤ рдХреЙрдкрд░ рдЖрдзрд╛рд░рд┐рдд рдХрд╡рдХрдирд╛рд╢рдХ (рдЬреИрд╕реЗ, рдХреЙрдкрд░ рдСрдХреНрд╕реАрдХреНрд▓реЛрд░рд╛рдЗрдб, рдмреЛрд░реНрдбреЛ рдорд┐рд╢реНрд░рдг)ред",
            "2. ЁЯТЙ рдЬреАрд╡рд╛рдгреБрдУрдВ рдХреЛ рджрдмрд╛рдиреЗ рдХреЗ рд▓рд┐рдП рд╕реНрдЯреНрд░реЗрдкреНрдЯреЛрдорд╛рдЗрд╕рд┐рди рдХрд╛ рдЫрд┐рдбрд╝рдХрд╛рд╡ рдХрд░реЗрдВред",
            "3. тЬВя╕П рд╕рдВрдХреНрд░рдорд┐рдд рд╣рд┐рд╕реНрд╕реЛрдВ рдХреА рдЫрдВрдЯрд╛рдИ рдХрд░реЗрдВ рдФрд░ рдЙрдкрдХрд░рдгреЛрдВ рдХреЛ рдХреАрдЯрд╛рдгреБрд░рд╣рд┐рдд рдХрд░реЗрдВред"
        ],
        "mr": [
            "1. ЁЯз┤ рдХреЙрдкрд░ рдСрдХреНрд╕реАрдХреНрд▓реЛрд░рд╛рдИрдб рдХрд┐рдВрд╡рд╛ рдмреЛрд░реНрдбреЛ рдорд┐рд╢реНрд░рдгрд╛рд╕рд╛рд░рдЦреЗ рдХреЙрдкрд░-рдЖрдзрд╛рд░рд┐рдд рдлрдВрдЧрд┐рд╕рд╛рдЗрдб рд╡рд╛рдкрд░рд╛.",
            "2. ЁЯТЙ рдмреЕрдХреНрдЯреЗрд░рд┐рдпрд╛рд╕рд╛рдареА рд╕реНрдЯреНрд░реЗрдкреНрдЯреЛрдорд╛рдпрд╕рд┐рди рдлрд╡рд╛рд░рдгреА рдХрд░рд╛.",
            "3. тЬВя╕П рд╕рдВрдХреНрд░рдорд┐рдд рднрд╛рдЧ рдЫрд╛рдЯреВрди рд╕рд╛рдзрдиреЗ рдирд┐рд░реНрдЬрдВрддреБрдХ рдХрд░рд╛."
        ],
        "time": "ЁЯХ░я╕П Apply fungicides in the early morning or late evening."
    },
    "Cutting Weevil": {
        "en": [
            "1. ЁЯРЬ Use insecticides like Chlorpyrifos or Imidacloprid.",
            "2. ЁЯСА Regular field monitoring to control spread.",
            "3. ЁЯжЧ Introduce natural predators like parasitic wasps."
        ],
        "hi": [
            "1. ЁЯРЬ рдХреНрд▓реЛрд░рдкрд╛рдпрд░реАрдлреЛрд╕ рдпрд╛ рдЗрдорд┐рдбрд╛рдХреНрд▓реЛрдкреНрд░рд┐рдб рд╕рд╛рд░рдЦреНрдпрд╛ рдХреАрдЯрдирд╛рд╢рдХрд╛рдВрдЪрд╛ рд╡рд╛рдкрд░ рдХрд░реЗрдВред",
            "2. ЁЯСА рдлреИрд▓рд╛рд╡ рдХреЛ рдирд┐рдпрдВрддреНрд░рд┐рдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдирд┐рдпрдорд┐рдд рдХреНрд╖реЗрддреНрд░ рдирд┐рдЧрд░рд╛рдиреА рдХрд░реЗрдВред",
            "3. ЁЯжЧ рдкрд░рдЬреАрд╡реА рддрддреИрдпрд╛ рдЬреИрд╕реЗ рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╢рд┐рдХрд╛рд░реА рдХреЛ рдкреЗрд╢ рдХрд░реЗрдВред"
        ],
        "mr": [
            "1. ЁЯРЬ рдХреНрд▓реЛрд░рдкрд╛рдпрд░реАрдлреЛрд╕ рдХрд┐рдВрд╡рд╛ рдЗрдорд┐рдбрд╛рдХреНрд▓реЛрдкреНрд░рд┐рдб рд╕рд╛рд░рдЦреНрдпрд╛ рдХреАрдЯрдХрдирд╛рд╢рдХрд╛рдВрдЪрд╛ рд╡рд╛рдкрд░ рдХрд░рд╛.",
            "2. ЁЯСА рдкреНрд░рдЧрддреАрд╡рд░ рдирд┐рдпрдВрддреНрд░рдг рдареЗрд╡рдгреНрдпрд╛рд╕рд╛рдареА рдирд┐рдпрдорд┐рддрдкрдгреЗ рдХреНрд╖реЗрддреНрд░ рдирд┐рд░реАрдХреНрд╖рдг рдХрд░рд╛.",
            "3. ЁЯжЧ рдкрд░рдЬреАрд╡реА рддрддреИрдпрд╛ рдпрд╛рдВрд╕рд╛рд░рдЦреЗ рдиреИрддрд┐рдХ рд╢рд┐рдХрд╛рд░ рдЖрдгрд╛."
        ],
        "time": "ЁЯХ░я╕П Spray in the evening to prevent evaporation."
    },
    "Die Back": {
        "en": [
            "1. ЁЯТК Apply fungicides such as Carbendazim or Copper Oxychloride.",
            "2. ЁЯФе Remove and burn infected parts.",
            "3. ЁЯМзя╕П Ensure proper drainage to prevent excess moisture."
        ],
        "hi": [
            "1. ЁЯТК рдХрд╛рд░реНрдмреЗрдВрдбрд╛рдЭрд┐рдо рдпрд╛ рдХреЙрдкрд░ рдСрдХреНрд╕реАрдХреНрд▓реЛрд░рд╛рдЗрдб рдЬреИрд╕реЗ рдХрд╡рдХрдирд╛рд╢рдХреЛрдВ рдХрд╛ рдЫрд┐рдбрд╝рдХрд╛рд╡ рдХрд░реЗрдВред",
            "2. ЁЯФе рд╕рдВрдХреНрд░рдорд┐рдд рд╣рд┐рд╕реНрд╕реЛрдВ рдХреЛ рд╣рдЯрд╛ рдХрд░ рдЬрд▓рд╛ рджреЗрдВред",
            "3. ЁЯМзя╕П рдЕрддреНрдпрдзрд┐рдХ рдирдореА рдХреЛ рд░реЛрдХрдиреЗ рдХреЗ рд▓рд┐рдП рдЙрдЪрд┐рдд рдЬрд▓ рдирд┐рдХрд╛рд╕реА рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реЗрдВред"
        ],
        "mr": [
            "1. ЁЯТК рдХрд╛рд░реНрдмреЗрдВрдбрд╛рдЭрд┐рдо рдХрд┐рдВрд╡рд╛ рдХреЙрдкрд░ рдСрдХреНрд╕реАрдХреНрд▓реЛрд░рд╛рдЗрдбрд╕рд╛рд░рдЦреНрдпрд╛ рдмреБрд░рд╢реАрдирд╛рд╢рдХрд╛рдВрдЪрд╛ рд╡рд╛рдкрд░ рдХрд░рд╛.",
            "2. ЁЯФе рд╕рдВрдХреНрд░рдорд┐рдд рднрд╛рдЧ рдХрд╛рдвреВрди рдЬрд╛рд│реВрди рдЯрд╛рдХрд╛.",
            "3. ЁЯМзя╕П рдЕрддрд┐рд░рд┐рдХреНрдд рдУрд▓рд╛рд╡рд╛ рдЯрд╛рд│рдгреНрдпрд╛рд╕рд╛рдареА рдпреЛрдЧреНрдп рдирд┐рдЪрд▒реНрдпрд╛рдЪреА рдЦрд╛рддреНрд░реА рдХрд░рд╛."
        ],
        "time": "ЁЯХ░я╕П Apply treatment after pruning or in the early growth stage."
    },
    "Gall Midge": {
        "en": [
            "1. ЁЯжЧ Use insecticides like Lambda-cyhalothrin or Spinosad.",
            "2. ЁЯЧСя╕П Remove infested plant parts and destroy them.",
            "3. ЁЯРЮ Encourage natural predators like ladybugs."
        ],
        "hi": [
            "1. ЁЯжЧ рд▓реИрдореНрдмреНрдбрд╛-рд╕рд╛рдпрд╣реЕрд▓реЛрдереНрд░рд┐рди рдпрд╛ рд╕реНрдкрд┐рдиреЛрд╕рд╛рдб рдЬреИрд╕реЗ рдХреАрдЯрдирд╛рд╢рдХреЛрдВ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред",
            "2. ЁЯЧСя╕П рд╕рдВрдХреНрд░рдорд┐рдд рдкреМрдзреЛрдВ рдХреЗ рд╣рд┐рд╕реНрд╕реЛрдВ рдХреЛ рд╣рдЯрд╛ рдХрд░ рдирд╖реНрдЯ рдХрд░реЗрдВред",
            "3. ЁЯРЮ рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╢рд┐рдХрд╛рд░реА рдЬреИрд╕реЗ рд▓реЗрдбреАрдмрдЧреНрд╕ рдХреЛ рдкреНрд░реЛрддреНрд╕рд╛рд╣рд┐рдд рдХрд░реЗрдВред"
        ],
        "mr": [
            "1. ЁЯжЧ рд▓реИрдореНрдмреНрдбрд╛-рд╕рд╛рдпрд╣реЕрд▓реЛрдереНрд░рд┐рди рдХрд┐рдВрд╡рд╛ рд╕реНрдкрд┐рдиреЛрд╕рд╛рдбрд╕рд╛рд░рдЦреНрдпрд╛ рдХреАрдЯрдХрдирд╛рд╢рдХрд╛рдВрдЪрд╛ рд╡рд╛рдкрд░ рдХрд░рд╛.",
            "2. ЁЯЧСя╕П рд╕рдВрдХреНрд░рдорд┐рдд рдкреМрдзрд╛рдВрдЪреНрдпрд╛ рднрд╛рдЧрд╛рдВрдирд╛ рдХрд╛рдвреВрди рдЯрд╛рдХрд╛ рдЖрдгрд┐ рдирд╖реНрдЯ рдХрд░рд╛.",
            "3. ЁЯРЮ рдиреИрддрд┐рдХ рд╢рд┐рдХрд╛рд░ рдЬрд╕реЗ рдХреА рд▓реЗрдбреАрдмрдЧреНрд╕рд▓рд╛ рдкреНрд░реЛрддреНрд╕рд╛рд╣рди рджреНрдпрд╛."
        ],
        "time": "ЁЯХ░я╕П Apply insecticides in the late afternoon."
    },
    "Powdery Mildew": {
        "en": [
            "1. ЁЯТз Use sulfur-based fungicides or neem oil.",
            "2. тЬВя╕П Improve air circulation by pruning dense growth.",
            "3. ЁЯЪл Avoid overhead watering."
        ],
        "hi": [
            "1. ЁЯТз рд╕рд▓реНрдлрд░-рдЖрдзрд╛рд░рд┐рдд рдХрд╡рдХрдирд╛рд╢рдХреЛрдВ рдпрд╛ рдиреАрдо рддреЗрд▓ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред",
            "2. тЬВя╕П рдШрдиреЗ рд╡реГрджреНрдзрд┐ рдХреЛ рдЫрд╛рдБрдЯрдХрд░ рд╣рд╡рд╛ рдХреЗ рд╕рдВрдЪрд╛рд░ рдХреЛ рд╕реБрдзрд╛рд░реЗрдВред",
            "3. ЁЯЪл рдКрдкрд░реА рд╕рд┐рдВрдЪрд╛рдИ рд╕реЗ рдмрдЪреЗрдВред"
        ],
        "mr": [
            "1. ЁЯТз рдЧрдВрдзрдХ рдЖрдзрд╛рд░рд┐рдд рдлрдВрдЧрд┐рд╕рд╛рдЗрдбреНрд╕ рдХрд┐рдВрд╡рд╛ рдиреАрдо рддреЗрд▓ рд╡рд╛рдкрд░рд╛.",
            "2. тЬВя╕П рджрд╛рдЯ рд╡рд╛рдв рдЫрд╛рдЯреВрди рд╣рд╡реЗрдЪрд╛ рдкреНрд░рд╡рд╛рд╣ рд╕реБрдзрд╛рд░рд╛рд╡рд╛.",
            "3. ЁЯЪл рд╡рд░реВрди рдкрд╛рдгреА рджреЗрдгреНрдпрд╛рдкрд╛рд╕реВрди рдЯрд╛рд│рд╛."
        ],
        "time": "ЁЯХ░я╕П Apply fungicide in dry weather conditions, preferably in the morning."
    },
    "Sooty Mould": {
        "en": [
            "1. ЁЯРЬ Control insect pests that produce honeydew (e.g., aphids, whiteflies).",
            "2. ЁЯЪ┐ Wash leaves with mild soap water to remove mold.",
            "3. ЁЯМ┐ Use neem oil or insecticidal soaps."
        ],
        "hi": [
            "1. ЁЯРЬ рдЙрдирдЦрдВрдб (рдЬреИрд╕реЗ, рдПрдлрд┐рдбреНрд╕, рд╕рдлреЗрдж рдордХреНрдЦрд┐рдпрд╛рдБ) рдЙрддреНрдкрдиреНрди рдХрд░рдиреЗ рд╡рд╛рд▓реЗ рдХреАрдЯреЛрдВ рдХреЛ рдирд┐рдпрдВрддреНрд░рд┐рдд рдХрд░реЗрдВред",
            "2. ЁЯЪ┐ рдкрддреНрддрд┐рдпреЛрдВ рдХреЛ рд╣рд▓реНрдХреЗ рд╕рд╛рдмреБрди рдкрд╛рдиреА рд╕реЗ рдзреЛрдХрд░ рдлрдлреВрдВрджреА рд╣рдЯрд╛ рджреЗрдВред",
            "3. ЁЯМ┐ рдиреАрдо рддреЗрд▓ рдпрд╛ рдХреАрдЯрдирд╛рд╢рдХ рд╕рд╛рдмреБрди рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред"
        ],
        "mr": [
            "1. ЁЯРЬ рдордзрд╛рдЪреЗ рд╣рдиреАрдбреНрдпреВ рдЙрддреНрдкрд╛рджрди рдХрд░рдгрд╛рд░реЗ рдХреАрдЯрдХ рдирд┐рдпрдВрддреНрд░рд┐рдд рдХрд░рд╛ (рдЙрджрд╛., рдПрдлрд┐рдбреНрд╕, рдкрд╛рдВрдврд░реА рдорд╛рд╢реА).",
            "2. ЁЯЪ┐ рдлреБрд▓рд╛рдВрд╕рд╛рдареА рд╣рд▓рдХреНрдпрд╛ рд╕рд╛рдмрдгрд╛рдЪреНрдпрд╛ рдкрд╛рдгреНрдпрд╛рдиреЗ рдкрд╛рдгреА рдШрд╛рд▓рд╛ рдЖрдгрд┐ рдлрдлреБрдВрджреА рдХрд╛рдврд╛.",
            "3. ЁЯМ┐ рдиреАрдо рддреЗрд▓ рдХрд┐рдВрд╡рд╛ рдХреАрдЯрдХрдирд╛рд╢рдХ рд╕рд╛рдмрдг рд╡рд╛рдкрд░рд╛."
        ],
        "time": "ЁЯХ░я╕П Apply treatment in the evening to avoid sunlight degradation."
    }
}


@st.cache_resource
def load_model():
    model_path = r"C:\Users\Raghunandan\OneDrive\Desktop\project\plant_disease_project\training\model.keras"
    return tf.keras.models.load_model(model_path)

model = load_model()

def preprocess_image(uploaded_file):
    image = Image.open(uploaded_file).convert("RGB")
    image_array = np.array(image)
    image_array = np.expand_dims(image_array, axis=0)
    return image_array, image

def generate_remedy_text(remedy_steps, best_time):
    remedy_text = "\n".join(remedy_steps)
    remedy_text += f"\n\nBest Time to Spray: {best_time}"
    return remedy_text

def create_download_link(text, filename):
    b64 = base64.b64encode(text.encode()).decode()
    return f'<a class="download-btn" href="data:file/txt;base64,{b64}" download="{filename}">Download Remedy</a>'

# -------------------- UI --------------------
st.title("ЁЯНГ Plant Disease Detection")

with st.container():
    st.markdown("<div class='upload-box'>", unsafe_allow_html=True)
    st.markdown("<h4 style='text-align: center;'>ЁЯУд Choose a plant leaf image:</h4>", unsafe_allow_html=True)
    uploaded_file = st.file_uploader("", type=["jpg", "jpeg", "png"], label_visibility="collapsed")
    st.markdown("</div>", unsafe_allow_html=True)

lang = st.radio("ЁЯМР Choose Language for Remedy:", ("English", "Hindi", "Marathi"), horizontal=True)
lang_map = {"English": "en", "Hindi": "hi", "Marathi": "mr"}
selected_lang = lang_map[lang]

if uploaded_file is not None:
    image_array, image_display = preprocess_image(uploaded_file)
    st.image(image_display, caption="Uploaded Image", use_column_width=True)

    prediction = model.predict(image_array)
    predicted_class_index = np.argmax(prediction[0])
    predicted_class = class_names[predicted_class_index]
    confidence = prediction[0][predicted_class_index] * 100

    st.markdown(
        f"""
        <div class="result-box">
            <strong>тЬЕ Prediction Result:</strong><br>
            <span style="font-size: 20px; font-weight: bold;">{predicted_class} ({confidence:.2f}%)</span>
        </div>
        """,
        unsafe_allow_html=True
    )

    result_text = f"Prediction: {predicted_class}\nConfidence: {confidence:.2f}%\n"

    if predicted_class == "Healthy":
        st.markdown(
            f"""
            <div class="remedy-box" style="background-color: #4caf50; text-align: center;">
                <h3>ЁЯМ┐ No Disease Detected</h3>
                <p>The plant is healthy and doesn't require treatment.</p>
            </div>
            """,
            unsafe_allow_html=True
        )
        result_text += "\nNo remedy required. The plant is healthy."
    else:
        remedy = remedies.get(predicted_class, {})
        if remedy:
            steps = remedy[selected_lang]
            remedy_text = generate_remedy_text(steps, remedy["time"])
            st.markdown(
                f"""
                <div class="remedy-box">
                    {"<br>".join(steps)}
                    <br><br>
                    ЁЯХ░я╕П <strong>Best Time to Spray:</strong> {remedy['time']}
                    <br><br>
                    <span style='font-size: 20px; font-weight: bold; color: yellow;'>тЪая╕П Use it under professional's advice.</span>
                </div>
                """,
                unsafe_allow_html=True
            )

            # Optional download feature (enabled here, but you can comment it if not needed)
            with st.container():
                st.markdown("<div class='download-container'>", unsafe_allow_html=True)
                download_link = create_download_link(remedy_text, f"{predicted_class}_remedy.txt")
                st.markdown(download_link, unsafe_allow_html=True)
                st.markdown("</div>", unsafe_allow_html=True)

            result_text += f"\n\nRemedy Steps:\n{remedy_text}"
